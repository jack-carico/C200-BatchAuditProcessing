#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CTCBAStorage.LINQSQL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CTCBAStorage")]
	public partial class CTCBAStorageDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertZ_StudentAudit(Z_StudentAudit instance);
    partial void UpdateZ_StudentAudit(Z_StudentAudit instance);
    partial void DeleteZ_StudentAudit(Z_StudentAudit instance);
    partial void InsertZ_UnusedCourse(Z_UnusedCourse instance);
    partial void UpdateZ_UnusedCourse(Z_UnusedCourse instance);
    partial void DeleteZ_UnusedCourse(Z_UnusedCourse instance);
    partial void InsertZ_UnusedCourseStatus(Z_UnusedCourseStatus instance);
    partial void UpdateZ_UnusedCourseStatus(Z_UnusedCourseStatus instance);
    partial void DeleteZ_UnusedCourseStatus(Z_UnusedCourseStatus instance);
    #endregion
		
		public CTCBAStorageDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CTCBAStorageDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CTCBAStorageDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CTCBAStorageDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Z_StudentAudit> Z_StudentAudits
		{
			get
			{
				return this.GetTable<Z_StudentAudit>();
			}
		}
		
		public System.Data.Linq.Table<Z_UnusedCourse> Z_UnusedCourses
		{
			get
			{
				return this.GetTable<Z_UnusedCourse>();
			}
		}
		
		public System.Data.Linq.Table<Z_UnusedCourseStatus> Z_UnusedCourseStatus
		{
			get
			{
				return this.GetTable<Z_UnusedCourseStatus>();
			}
		}
		
		public System.Data.Linq.Table<v_MostRecentAudit> v_MostRecentAudits
		{
			get
			{
				return this.GetTable<v_MostRecentAudit>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentAudits")]
	public partial class Z_StudentAudit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RecordId;
		
		private string _StudentId;
		
		private System.Nullable<System.DateTime> _AuditTimestamp;
		
		private string _ProgramCode;
		
		private System.Nullable<decimal> _CreditsRequired;
		
		private System.Nullable<decimal> _CreditsApplied;
		
		private string _DegreeTitle;
		
		private string _AuditText;
		
		private EntitySet<Z_UnusedCourse> _UnusedCourses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecordIdChanging(int value);
    partial void OnRecordIdChanged();
    partial void OnStudentIdChanging(string value);
    partial void OnStudentIdChanged();
    partial void OnAuditTimestampChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditTimestampChanged();
    partial void OnProgramCodeChanging(string value);
    partial void OnProgramCodeChanged();
    partial void OnCreditsRequiredChanging(System.Nullable<decimal> value);
    partial void OnCreditsRequiredChanged();
    partial void OnCreditsAppliedChanging(System.Nullable<decimal> value);
    partial void OnCreditsAppliedChanged();
    partial void OnDegreeTitleChanging(string value);
    partial void OnDegreeTitleChanged();
    partial void OnAuditTextChanging(string value);
    partial void OnAuditTextChanged();
    #endregion
		
		public Z_StudentAudit()
		{
			this._UnusedCourses = new EntitySet<Z_UnusedCourse>(new Action<Z_UnusedCourse>(this.attach_UnusedCourses), new Action<Z_UnusedCourse>(this.detach_UnusedCourses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RecordId
		{
			get
			{
				return this._RecordId;
			}
			set
			{
				if ((this._RecordId != value))
				{
					this.OnRecordIdChanging(value);
					this.SendPropertyChanging();
					this._RecordId = value;
					this.SendPropertyChanged("RecordId");
					this.OnRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="NVarChar(20)")]
		public string StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditTimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditTimestamp
		{
			get
			{
				return this._AuditTimestamp;
			}
			set
			{
				if ((this._AuditTimestamp != value))
				{
					this.OnAuditTimestampChanging(value);
					this.SendPropertyChanging();
					this._AuditTimestamp = value;
					this.SendPropertyChanged("AuditTimestamp");
					this.OnAuditTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramCode", DbType="NVarChar(10)")]
		public string ProgramCode
		{
			get
			{
				return this._ProgramCode;
			}
			set
			{
				if ((this._ProgramCode != value))
				{
					this.OnProgramCodeChanging(value);
					this.SendPropertyChanging();
					this._ProgramCode = value;
					this.SendPropertyChanged("ProgramCode");
					this.OnProgramCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditsRequired", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> CreditsRequired
		{
			get
			{
				return this._CreditsRequired;
			}
			set
			{
				if ((this._CreditsRequired != value))
				{
					this.OnCreditsRequiredChanging(value);
					this.SendPropertyChanging();
					this._CreditsRequired = value;
					this.SendPropertyChanged("CreditsRequired");
					this.OnCreditsRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditsApplied", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> CreditsApplied
		{
			get
			{
				return this._CreditsApplied;
			}
			set
			{
				if ((this._CreditsApplied != value))
				{
					this.OnCreditsAppliedChanging(value);
					this.SendPropertyChanging();
					this._CreditsApplied = value;
					this.SendPropertyChanged("CreditsApplied");
					this.OnCreditsAppliedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DegreeTitle", DbType="NVarChar(200)")]
		public string DegreeTitle
		{
			get
			{
				return this._DegreeTitle;
			}
			set
			{
				if ((this._DegreeTitle != value))
				{
					this.OnDegreeTitleChanging(value);
					this.SendPropertyChanging();
					this._DegreeTitle = value;
					this.SendPropertyChanged("DegreeTitle");
					this.OnDegreeTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditText", DbType="NVarChar(MAX)")]
		public string AuditText
		{
			get
			{
				return this._AuditText;
			}
			set
			{
				if ((this._AuditText != value))
				{
					this.OnAuditTextChanging(value);
					this.SendPropertyChanging();
					this._AuditText = value;
					this.SendPropertyChanged("AuditText");
					this.OnAuditTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Z_StudentAudit_Z_UnusedCourse", Storage="_UnusedCourses", ThisKey="RecordId", OtherKey="StudentAudit_RecordId")]
		public EntitySet<Z_UnusedCourse> Z_UnusedCourses
		{
			get
			{
				return this._UnusedCourses;
			}
			set
			{
				this._UnusedCourses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UnusedCourses(Z_UnusedCourse entity)
		{
			this.SendPropertyChanging();
			entity.Z_StudentAudit = this;
		}
		
		private void detach_UnusedCourses(Z_UnusedCourse entity)
		{
			this.SendPropertyChanging();
			entity.Z_StudentAudit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UnusedCourses")]
	public partial class Z_UnusedCourse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RecordId;
		
		private string _CourseStatus;
		
		private string _CourseId;
		
		private string _CourseTitle;
		
		private decimal _EnrolledCredits;
		
		private string _LetterGrade;
		
		private string _QuarterLabel;
		
		private string _CTCYrq;
		
		private System.Nullable<int> _StudentAudit_RecordId;
		
		private EntityRef<Z_StudentAudit> _StudentAudit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecordIdChanging(int value);
    partial void OnRecordIdChanged();
    partial void OnCourseStatusChanging(string value);
    partial void OnCourseStatusChanged();
    partial void OnCourseIdChanging(string value);
    partial void OnCourseIdChanged();
    partial void OnCourseTitleChanging(string value);
    partial void OnCourseTitleChanged();
    partial void OnEnrolledCreditsChanging(decimal value);
    partial void OnEnrolledCreditsChanged();
    partial void OnLetterGradeChanging(string value);
    partial void OnLetterGradeChanged();
    partial void OnQuarterLabelChanging(string value);
    partial void OnQuarterLabelChanged();
    partial void OnCTCYrqChanging(string value);
    partial void OnCTCYrqChanged();
    partial void OnStudentAudit_RecordIdChanging(System.Nullable<int> value);
    partial void OnStudentAudit_RecordIdChanged();
    #endregion
		
		public Z_UnusedCourse()
		{
			this._StudentAudit = default(EntityRef<Z_StudentAudit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RecordId
		{
			get
			{
				return this._RecordId;
			}
			set
			{
				if ((this._RecordId != value))
				{
					this.OnRecordIdChanging(value);
					this.SendPropertyChanging();
					this._RecordId = value;
					this.SendPropertyChanged("RecordId");
					this.OnRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseStatus", DbType="NVarChar(1)")]
		public string CourseStatus
		{
			get
			{
				return this._CourseStatus;
			}
			set
			{
				if ((this._CourseStatus != value))
				{
					this.OnCourseStatusChanging(value);
					this.SendPropertyChanging();
					this._CourseStatus = value;
					this.SendPropertyChanged("CourseStatus");
					this.OnCourseStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseId", DbType="NVarChar(10)")]
		public string CourseId
		{
			get
			{
				return this._CourseId;
			}
			set
			{
				if ((this._CourseId != value))
				{
					this.OnCourseIdChanging(value);
					this.SendPropertyChanging();
					this._CourseId = value;
					this.SendPropertyChanged("CourseId");
					this.OnCourseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseTitle", DbType="NVarChar(200)")]
		public string CourseTitle
		{
			get
			{
				return this._CourseTitle;
			}
			set
			{
				if ((this._CourseTitle != value))
				{
					this.OnCourseTitleChanging(value);
					this.SendPropertyChanging();
					this._CourseTitle = value;
					this.SendPropertyChanged("CourseTitle");
					this.OnCourseTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnrolledCredits", DbType="Decimal(18,2) NOT NULL")]
		public decimal EnrolledCredits
		{
			get
			{
				return this._EnrolledCredits;
			}
			set
			{
				if ((this._EnrolledCredits != value))
				{
					this.OnEnrolledCreditsChanging(value);
					this.SendPropertyChanging();
					this._EnrolledCredits = value;
					this.SendPropertyChanged("EnrolledCredits");
					this.OnEnrolledCreditsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LetterGrade", DbType="NVarChar(2)")]
		public string LetterGrade
		{
			get
			{
				return this._LetterGrade;
			}
			set
			{
				if ((this._LetterGrade != value))
				{
					this.OnLetterGradeChanging(value);
					this.SendPropertyChanging();
					this._LetterGrade = value;
					this.SendPropertyChanged("LetterGrade");
					this.OnLetterGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuarterLabel", DbType="NVarChar(8)")]
		public string QuarterLabel
		{
			get
			{
				return this._QuarterLabel;
			}
			set
			{
				if ((this._QuarterLabel != value))
				{
					this.OnQuarterLabelChanging(value);
					this.SendPropertyChanging();
					this._QuarterLabel = value;
					this.SendPropertyChanged("QuarterLabel");
					this.OnQuarterLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CTCYrq", DbType="NVarChar(4)")]
		public string CTCYrq
		{
			get
			{
				return this._CTCYrq;
			}
			set
			{
				if ((this._CTCYrq != value))
				{
					this.OnCTCYrqChanging(value);
					this.SendPropertyChanging();
					this._CTCYrq = value;
					this.SendPropertyChanged("CTCYrq");
					this.OnCTCYrqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentAudit_RecordId", DbType="Int")]
		public System.Nullable<int> StudentAudit_RecordId
		{
			get
			{
				return this._StudentAudit_RecordId;
			}
			set
			{
				if ((this._StudentAudit_RecordId != value))
				{
					if (this._StudentAudit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentAudit_RecordIdChanging(value);
					this.SendPropertyChanging();
					this._StudentAudit_RecordId = value;
					this.SendPropertyChanged("StudentAudit_RecordId");
					this.OnStudentAudit_RecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Z_StudentAudit_Z_UnusedCourse", Storage="_StudentAudit", ThisKey="StudentAudit_RecordId", OtherKey="RecordId", IsForeignKey=true)]
		public Z_StudentAudit Z_StudentAudit
		{
			get
			{
				return this._StudentAudit.Entity;
			}
			set
			{
				Z_StudentAudit previousValue = this._StudentAudit.Entity;
				if (((previousValue != value) 
							|| (this._StudentAudit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentAudit.Entity = null;
						previousValue.Z_UnusedCourses.Remove(this);
					}
					this._StudentAudit.Entity = value;
					if ((value != null))
					{
						value.Z_UnusedCourses.Add(this);
						this._StudentAudit_RecordId = value.RecordId;
					}
					else
					{
						this._StudentAudit_RecordId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Z_StudentAudit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UnusedCourseStatus")]
	public partial class Z_UnusedCourseStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CourseStatus;
		
		private string _StatusTitle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourseStatusChanging(string value);
    partial void OnCourseStatusChanged();
    partial void OnStatusTitleChanging(string value);
    partial void OnStatusTitleChanged();
    #endregion
		
		public Z_UnusedCourseStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseStatus", DbType="NVarChar(1) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CourseStatus
		{
			get
			{
				return this._CourseStatus;
			}
			set
			{
				if ((this._CourseStatus != value))
				{
					this.OnCourseStatusChanging(value);
					this.SendPropertyChanging();
					this._CourseStatus = value;
					this.SendPropertyChanged("CourseStatus");
					this.OnCourseStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusTitle", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StatusTitle
		{
			get
			{
				return this._StatusTitle;
			}
			set
			{
				if ((this._StatusTitle != value))
				{
					this.OnStatusTitleChanging(value);
					this.SendPropertyChanging();
					this._StatusTitle = value;
					this.SendPropertyChanged("StatusTitle");
					this.OnStatusTitleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_MostRecentAudit")]
	public partial class v_MostRecentAudit
	{
		
		private int _RecordId;
		
		private string _StudentId;
		
		private System.Nullable<System.DateTime> _AuditTimestamp;
		
		private string _ProgramCode;
		
		private System.Nullable<decimal> _CreditsRequired;
		
		private System.Nullable<decimal> _CreditsApplied;
		
		private string _DegreeTitle;
		
		public v_MostRecentAudit()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordId", DbType="Int NOT NULL")]
		public int RecordId
		{
			get
			{
				return this._RecordId;
			}
			set
			{
				if ((this._RecordId != value))
				{
					this._RecordId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="NVarChar(20)")]
		public string StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					this._StudentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditTimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditTimestamp
		{
			get
			{
				return this._AuditTimestamp;
			}
			set
			{
				if ((this._AuditTimestamp != value))
				{
					this._AuditTimestamp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramCode", DbType="NVarChar(10)")]
		public string ProgramCode
		{
			get
			{
				return this._ProgramCode;
			}
			set
			{
				if ((this._ProgramCode != value))
				{
					this._ProgramCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditsRequired", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> CreditsRequired
		{
			get
			{
				return this._CreditsRequired;
			}
			set
			{
				if ((this._CreditsRequired != value))
				{
					this._CreditsRequired = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditsApplied", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> CreditsApplied
		{
			get
			{
				return this._CreditsApplied;
			}
			set
			{
				if ((this._CreditsApplied != value))
				{
					this._CreditsApplied = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DegreeTitle", DbType="NVarChar(200)")]
		public string DegreeTitle
		{
			get
			{
				return this._DegreeTitle;
			}
			set
			{
				if ((this._DegreeTitle != value))
				{
					this._DegreeTitle = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
